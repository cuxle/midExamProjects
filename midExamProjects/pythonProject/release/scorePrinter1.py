# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'scorePrinter.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtPrintSupport import QPrinter, QPrintDialog
# from pystrich.ean13 import EAN13Encoder
from pystrich.code128 import Code128Encoder
from PyQt5.QtNetwork import QNetworkAccessManager, QNetworkReply, QNetworkRequest
from PyQt5.QtCore import QUrl, QJsonDocument, QJsonValue, QJsonParseError, QSizeF, QStandardPaths, QDir
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtGui import QTextDocument, QPageSize, QPageLayout, QPainter
from enum import Enum
import json


class RequestType(Enum):
    RequestStudentInfo = 1
    RequestStudentScore = 2
    RequestTypeInvalid = 3


class Ui_MainWindow(object):
    def __init__(self):
        super(Ui_MainWindow, self).__init__()
        self.loginToken = None
        self.m_baseAddress = "http://121.227.30.61:8031/"
        self.m_requestType = RequestType.RequestTypeInvalid
        self.textEdit = QtWidgets.QTextEdit()
        self.doc = QTextDocument()
        self.configurePrint = False
        self.messagebox = QtWidgets.QMessageBox()
        self.messagebox.setIcon(QtWidgets.QMessageBox.Warning)
        self.messagebox.setWindowTitle("警告！")
        self.messagebox.setText("考生有未考试项目!")
        self.closeBoxTimer = QtCore.QTimer()
        self.closeBoxTimer.setInterval(3000)
        self.closeBoxTimer.setSingleShot(True)
        self.closeBoxTimer.timeout.connect(self.closeBoxTimerOut)
        print("init construnct")
        self.readJson()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 835)
        MainWindow.setMaximumSize(QtCore.QSize(900, 16777215))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setMinimumSize(QtCore.QSize(0, 70))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(24)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background-color: rgb(85, 85, 255);")
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_4.addWidget(self.label_2)
        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_3.setTitle("")
        self.groupBox_3.setObjectName("groupBox_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox_3)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.groupBox_3)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.leStudentZkh = QtWidgets.QLineEdit(self.groupBox_3)
        self.leStudentZkh.setMinimumSize(QtCore.QSize(300, 40))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(18)
        self.leStudentZkh.setFont(font)
        self.leStudentZkh.setObjectName("leStudentZkh")
        self.horizontalLayout.addWidget(self.leStudentZkh)
        self.horizontalLayout_3.addLayout(self.horizontalLayout)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem1)
        self.pbGetScore = QtWidgets.QPushButton(self.groupBox_3)
        self.pbGetScore.setMinimumSize(QtCore.QSize(150, 40))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(18)
        self.pbGetScore.setFont(font)
        self.pbGetScore.setObjectName("pbGetScore")
        self.horizontalLayout_3.addWidget(self.pbGetScore)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem2)
        self.verticalLayout_3.addLayout(self.horizontalLayout_3)
        spacerItem3 = QtWidgets.QSpacerItem(20, 47, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem3)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.groupBox = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox.setMinimumSize(QtCore.QSize(300, 150))
        self.groupBox.setMaximumSize(QtCore.QSize(500, 16777215))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(16)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(16)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_2.addWidget(self.label_4)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.lbStudentName = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(18)
        self.lbStudentName.setFont(font)
        self.lbStudentName.setObjectName("lbStudentName")
        self.verticalLayout.addWidget(self.lbStudentName)
        self.lbStudentKaoJiHao = QtWidgets.QLabel(self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(18)
        self.lbStudentKaoJiHao.setFont(font)
        self.lbStudentKaoJiHao.setObjectName("lbStudentKaoJiHao")
        self.verticalLayout.addWidget(self.lbStudentKaoJiHao)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.gridLayout_2.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.horizontalLayout_5.addWidget(self.groupBox)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem5)
        self.verticalLayout_3.addLayout(self.horizontalLayout_5)
        spacerItem6 = QtWidgets.QSpacerItem(20, 48, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem6)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem7)
        self.groupBox_2 = QtWidgets.QGroupBox(self.groupBox_3)
        self.groupBox_2.setMinimumSize(QtCore.QSize(450, 240))
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.groupBox_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_7 = QtWidgets.QLabel(self.groupBox_2)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(16)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 0, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.groupBox_2)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(16)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 0, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.groupBox_2)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(16)
        self.label_9.setFont(font)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 0, 2, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.groupBox_2)
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(16)
        self.label_10.setFont(font)
        self.label_10.setAlignment(QtCore.Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.gridLayout.addWidget(self.label_10, 0, 3, 1, 1)
        self.lbProject1 = QtWidgets.QLabel(self.groupBox_2)
        self.lbProject1.setAlignment(QtCore.Qt.AlignCenter)
        self.lbProject1.setObjectName("lbProject1")
        self.gridLayout.addWidget(self.lbProject1, 1, 0, 1, 1)
        self.lbScore1 = QtWidgets.QLabel(self.groupBox_2)
        self.lbScore1.setAlignment(QtCore.Qt.AlignCenter)
        self.lbScore1.setObjectName("lbScore1")
        self.gridLayout.addWidget(self.lbScore1, 1, 1, 1, 1)
        self.lbStatus1 = QtWidgets.QLabel(self.groupBox_2)
        self.lbStatus1.setAlignment(QtCore.Qt.AlignCenter)
        self.lbStatus1.setObjectName("lbStatus1")
        self.gridLayout.addWidget(self.lbStatus1, 1, 2, 1, 1)
        self.lbChoose1 = QtWidgets.QLabel(self.groupBox_2)
        self.lbChoose1.setAlignment(QtCore.Qt.AlignCenter)
        self.lbChoose1.setObjectName("lbChoose1")
        self.gridLayout.addWidget(self.lbChoose1, 1, 3, 1, 1)
        self.lbProject2 = QtWidgets.QLabel(self.groupBox_2)
        self.lbProject2.setAlignment(QtCore.Qt.AlignCenter)
        self.lbProject2.setObjectName("lbProject2")
        self.gridLayout.addWidget(self.lbProject2, 2, 0, 1, 1)
        self.lbScore2 = QtWidgets.QLabel(self.groupBox_2)
        self.lbScore2.setAlignment(QtCore.Qt.AlignCenter)
        self.lbScore2.setObjectName("lbScore2")
        self.gridLayout.addWidget(self.lbScore2, 2, 1, 1, 1)
        self.lbStatus2 = QtWidgets.QLabel(self.groupBox_2)
        self.lbStatus2.setAlignment(QtCore.Qt.AlignCenter)
        self.lbStatus2.setObjectName("lbStatus2")
        self.gridLayout.addWidget(self.lbStatus2, 2, 2, 1, 1)
        self.lbChoose2 = QtWidgets.QLabel(self.groupBox_2)
        self.lbChoose2.setAlignment(QtCore.Qt.AlignCenter)
        self.lbChoose2.setObjectName("lbChoose2")
        self.gridLayout.addWidget(self.lbChoose2, 2, 3, 1, 1)
        self.lbProject3 = QtWidgets.QLabel(self.groupBox_2)
        self.lbProject3.setAlignment(QtCore.Qt.AlignCenter)
        self.lbProject3.setObjectName("lbProject3")
        self.gridLayout.addWidget(self.lbProject3, 3, 0, 1, 1)
        self.lbScore3 = QtWidgets.QLabel(self.groupBox_2)
        self.lbScore3.setAlignment(QtCore.Qt.AlignCenter)
        self.lbScore3.setObjectName("lbScore3")
        self.gridLayout.addWidget(self.lbScore3, 3, 1, 1, 1)
        self.lbStatus3 = QtWidgets.QLabel(self.groupBox_2)
        self.lbStatus3.setAlignment(QtCore.Qt.AlignCenter)
        self.lbStatus3.setObjectName("lbStatus3")
        self.gridLayout.addWidget(self.lbStatus3, 3, 2, 1, 1)
        self.lbChoose3 = QtWidgets.QLabel(self.groupBox_2)
        self.lbChoose3.setAlignment(QtCore.Qt.AlignCenter)
        self.lbChoose3.setObjectName("lbChoose3")
        self.gridLayout.addWidget(self.lbChoose3, 3, 3, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.horizontalLayout_6.addWidget(self.groupBox_2)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem8)
        self.verticalLayout_3.addLayout(self.horizontalLayout_6)
        spacerItem9 = QtWidgets.QSpacerItem(20, 47, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem9)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem10)
        self.pbPrintScore = QtWidgets.QPushButton(self.groupBox_3)
        self.pbPrintScore.setMinimumSize(QtCore.QSize(200, 40))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei")
        font.setPointSize(18)
        self.pbPrintScore.setFont(font)
        self.pbPrintScore.setObjectName("pbPrintScore")
        self.horizontalLayout_7.addWidget(self.pbPrintScore)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem11)
        self.verticalLayout_3.addLayout(self.horizontalLayout_7)
        self.verticalLayout_4.addWidget(self.groupBox_3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


        # create networkAccessWorker
        self.network = QNetworkAccessManager()
        self.network.finished.connect(self.requestFinished)

        self.pbGetScore.clicked.connect(self.requestStarted)
        self.pbPrintScore.clicked.connect(self.printClicked)
        self.leStudentZkh.editingFinished.connect(self.editFinished)

        self.initPngPath()

    def initPngPath(self):
        self.serverLocation = QStandardPaths.writableLocation(QStandardPaths.GenericDataLocation) + "/server/"
        dir = QDir(self.serverLocation)
        if not dir.exists():
            dir.mkdir(".")

    def requestStarted(self):
        # 1. request student info
        # 2. after that, request student score
        self.m_requestType = RequestType.RequestStudentInfo
        studentZkh = self.leStudentZkh.text()
        str = self.m_baseAddress + "/xuetong/business/biz/host/candidate/admission/" + studentZkh
        request = QNetworkRequest()
        request.setHeader(QNetworkRequest.ContentTypeHeader, "application/json")
        request.setUrl(QUrl(str))
        reply = self.network.get(request)
        print("request student info")

    def requestStudentSocre(self):
        print("request student score")
        self.m_requestType = RequestType.RequestStudentScore
        studentZkh = self.leStudentZkh.text()
        str = self.m_baseAddress + "/xuetong/business/biz/host/result/" + studentZkh
        request = QNetworkRequest()
        request.setHeader(QNetworkRequest.ContentTypeHeader, "application/json")
        request.setUrl(QUrl(str))
        json = QJsonDocument()
        reply = self.network.post(request, json.toJson())

    def requestFinished(self, reply):
        print("reply")
        str = reply.readAll()
        print(str)
        print("request finished")
        error = QJsonParseError()
        json = QJsonDocument.fromJson(str, error)
        obj = json.object()
        print(obj.keys())
        if "success" not in obj.keys():
            print("not success!")
            self.leStudentZkh.blockSignals(True)
            QMessageBox.information(None, "警告", "考生不存在")
            self.resetUi()
            self.leStudentZkh.blockSignals(False)
            return
        success = obj["success"].toBool()
        print(success)
        print(self.m_requestType)
        if self.m_requestType == RequestType.RequestStudentInfo:
            data = obj["data"].toObject()
            self.zkh = data["zkh"].toString()
            self.name = data["name"].toString()
            self.bjdm = data["bjdm"].toString()
            # 必测体育项目
            self.bctyxm = data["bctyxm"].toString()
            # 选测体育项目1
            self.xctyxm1 = data["xctyxm1"].toString()
            # 选测体育项目2
            self.xctyxm2 = data["xctyxm2"].toString()

            self.zxmc = data["zxmc"].toString()

            self.usualResults = data["usualResults"].toInt()


            self.lbStudentName.setText(self.name)
            self.lbProject1.setText(self.bctyxm)
            self.lbProject2.setText(self.xctyxm1)
            self.lbProject3.setText(self.xctyxm2)
            self.lbStudentKaoJiHao.setText(self.zkh)

            self.requestStudentSocre()
        elif self.m_requestType == RequestType.RequestStudentScore:
            localobj = obj["data"].toObject()
            objArray = localobj["records"].toArray()

            # there is only one array in the objArray
            oneArray = objArray[0].toObject()

            bctyxm = oneArray["bctyxmName"].toString()
            bctyxmExamed = not oneArray["bctyxmValue"].isNull()
            self.bctyxmValue = oneArray["bctyxmValue"].toInt()
            bctyxmValueStr = f'{self.bctyxmValue}'
            if not bctyxmExamed:
                bctyxmValueStr = ""

            xctyxm1 = oneArray["xctyxm1Name"].toString()
            xctyxm1Examed = not oneArray["xctyxm1Value"].isNull()
            self.xctyxm1Value = oneArray["xctyxm1Value"].toInt()
            xctyxm1ValueStr = f'{self.xctyxm1Value}'
            if not xctyxm1Examed:
                xctyxm1ValueStr = ""

            xctyxm2 = oneArray["xctyxm2Name"].toString()
            xctyxm2Examed = not oneArray["xctyxm2Value"].isNull()
            self.xctyxm2Value = oneArray["xctyxm2Value"].toInt()
            xctyxm2ValueStr = f'{self.xctyxm2Value}'
            if not xctyxm2Examed:
                xctyxm2ValueStr = ""

            print("bc value:", self.bctyxmValue)
            print("xc 1 value:", self.xctyxm1Value)
            print("xc 2 value:", self.xctyxm2Value)
            print("usual results:", self.usualResults)

            lastScore = (self.bctyxmValue + self.xctyxm1Value + self.xctyxm2Value + self.usualResults)
            self.lastScore = f'{lastScore}'
            print(lastScore)

            def DisPlayItem():
                self.bctyxmName = ""
                self.bctyxmValue = ""
                self.bctyxmExamed = ""

            # update ui
            self.lbScore1.setText(bctyxmValueStr)
            self.lbScore2.setText(xctyxm1ValueStr)
            self.lbScore3.setText(xctyxm2ValueStr)

            status1Str = "未考"
            status1Style = "color:red;"
            status2Str = "未考"
            status2Style = "color:red;"
            status3Str = "未考"
            status3Style = "color:red;"

            if bctyxmExamed:
                status1Style = "color:green;"
                status1Str = "已考"
            if xctyxm1Examed:
                status2Style = "color:green;"
                status2Str = "已考"
            if xctyxm2Examed:
                status3Style = "color:green;"
                status3Str = "已考"
            if not bctyxmExamed or not xctyxm2Examed or not xctyxm1Examed:
                self.closeBoxTimer.start()
                self.messagebox.show()
                return

            self.lbStatus1.setText(status1Str)
            self.lbStatus1.setStyleSheet(status1Style)
            self.lbStatus2.setText(status2Str)
            self.lbStatus2.setStyleSheet(status2Style)
            self.lbStatus3.setText(status3Str)
            self.lbStatus3.setStyleSheet(status3Style)

            self.lbChoose1.setText("必考")
            self.lbChoose2.setText("选考")
            self.lbChoose3.setText("选考")

            self.printClicked()
            print("print successfully")
        else:
            return
    def closeBoxTimerOut(self):
        self.messagebox.close()
        self.resetUi()

    def makeHtml(self):
        htmlStr = ""
        htmlStr += '<br>'
        htmlStr += '<br>'
        htmlStr += '<h1 align="center" style=" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:20pt; font-weight:600;">2022年苏州市初中毕业生</span></h1>'
        htmlStr += '<h1 align="center" style=" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-size:20pt; font-weight:600;">体育考试成绩单</span></h1>'
        htmlStr += '<br>'
        htmlStr += '<br>'
        htmlStr += '<table border="1" align="center" width="90%" cellspacing="0" cellpadding="4">'
        htmlStr += '<tr>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"> <span style=" font-weight:600;"><b>准考证号</span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>学校</span></p></td>'
        htmlStr += '<td align="center"> '
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>姓名</span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>班级</span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>体育考试总分</span></p></td></tr>'
        htmlStr += '<tr>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;">' + self.zkh + '</span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">' + self.zxmc + '<span style=" font-style:italic;"> </span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">' + self.name + '<span style=" font-style:italic;"> </span></p></td>'
        htmlStr += '<td>'
        htmlStr += '<p align="center" style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">' + self.bjdm + ' <span style=" font-style:italic;"> </span></p></td>'
        htmlStr += '<td rowspan="6"; style="vertical-align : middle;text-align:center;">'

        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><font size="+4">' + self.lastScore + ' </font><span style=" font-style:italic;"> </span></p></td>'
        #htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"> 54 <span style=" font-style:italic;"> </span></p></td>'


        htmlStr += '</tr>'
        htmlStr += '<tr>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"> </span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><b>项目名称<span style=" font-style:italic;"></span> </p></td>'
        htmlStr += '<td colspan="2" align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><b>成绩 </p></td>'
        htmlStr += '</tr>'
        htmlStr += '<tr>'
        htmlStr += '<td align="center"> '
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>必考项目</span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style="">' + self.bctyxm + '</span> </p></td>'
        htmlStr += '<td colspan="2" align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">' + f'{self.bctyxmValue}' + ' </p></td>'
        htmlStr += '</tr>'
        htmlStr += '<tr>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>选测项目1 </span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style="">' + self.xctyxm1 + '</span></p></td>'
        htmlStr += '<td colspan="2" align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" ">' + f'{self.xctyxm1Value}' + '</span></p></td>'
        htmlStr += '</tr>'
        htmlStr += '<tr>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>选测项目2 </span></p></td>'
        htmlStr += '<td align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style="">' + self.xctyxm2 + '</span></p></td>'
        htmlStr += '<td colspan="2" align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style="">' + f'{self.xctyxm2Value}' + '</span></p></td>'
        htmlStr += '</tr>'
        htmlStr += '<tr>'
        htmlStr += '<td colspan="2" align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;"><b>日常考试成绩</b> </span></p></td>'
        htmlStr += '<td colspan="2" align="center">'
        htmlStr += '<p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;"><span style=" font-weight:600;">' + f'{self.usualResults}' + '</span></p></td>'
        htmlStr += '</tr></table>'
        htmlStr += '<br>'
        htmlStr += '<br>'
        htmlStr += '<table align = "center">'
        htmlStr += '<tr>'
        htmlStr += '<td rowspan = "4"; width = 200px></td>'
        htmlStr += '<td rowspan = "4"; width = 200px><img src = '+ self.barcoder +'></td>'
        htmlStr += '<td width = 200px></td>'
        htmlStr += '<td width = 200px></td>'
        htmlStr += '</tr>'
        htmlStr += '<tr><td>签字:</td></tr>'
        htmlStr += '<tr><td></td></tr>'
        htmlStr += '<tr>'
        htmlStr += '<td>日期: ' + QtCore.QDateTime.currentDateTime().toString("yyyy.MM.dd hh:mm:ss") + '</td>'
        htmlStr += '</tr>'
        htmlStr += '</table>'
        return htmlStr
    def printDemo(self):
        self.leStudentZkh.blockSignals(True)
        printer = QPrinter(QPrinter.ScreenResolution)
        printDialog = QPrintDialog(printer)
        print("hello world3")
        if printDialog.exec_() == QPrintDialog.Accepted:
            self.doc.print_(printer)
        self.leStudentZkh.blockSignals(False)

    def printClicked(self):
        self.leStudentZkh.blockSignals(True)
        htmlStr = self.makeHtml()
        print("hello world 0")
        print("hello world 1")
        #self.doc.setHtml(htmlStr)


        print("hello world")
        printer = QPrinter(QPrinter.ScreenResolution)
        print("hello world 2")
        #printer.setPageMargins(0.925, 0.8, 0.5, QPrinter.Inch)
        print("hello world 3")
        printer.setPageSize(QPrinter.A5)
        printer.setPageOrientation(QPageLayout.Landscape)

        paperSize = QSizeF(printer.width(), printer.height())
        self.doc.setHtml(htmlStr)
        self.doc.setPageSize(paperSize)

        print("hello world4")

        printDialog = QPrintDialog(printer)
        print("hello world3")
        if not self.configurePrint:
            if printDialog.exec_() != QPrintDialog.Accepted:
                self.leStudentZkh.blockSignals(False)
                return
            self.configurePrint = True
        self.doc.print_(printer)

        self.resetUi()
        self.leStudentZkh.blockSignals(False)

    def resetUi(self):
        self.leStudentZkh.blockSignals(True)
        self.leStudentZkh.clear()
        self.leStudentZkh.blockSignals(False)
        self.lbStudentName.clear()
        self.lbStudentKaoJiHao.clear()
        self.lbStatus1.clear()
        self.lbStatus2.clear()
        self.lbStatus3.clear()
        self.lbScore1.clear()
        self.lbScore2.clear()
        self.lbScore3.clear()
        self.lbChoose1.clear()
        self.lbChoose2.clear()
        self.lbChoose3.clear()
        self.lbProject1.clear()
        self.lbProject2.clear()
        self.lbProject3.clear()

    def editFinished(self):
        print("edit finished")
        encoder = Code128Encoder(self.leStudentZkh.text())
        self.barcoder = self.serverLocation + "a.png"
        encoder.save(self.barcoder)
        self.requestStarted()

    def readJson(self):
        print("read json")
        with open('data.json') as f:
            data = json.load(f)

        print(type(data))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "中考体育成绩打印程序"))
        self.label.setText(_translate("MainWindow", "考生号:"))
        self.pbGetScore.setText(_translate("MainWindow", "查询"))
        self.label_3.setText(_translate("MainWindow", "姓     名: "))
        self.label_4.setText(_translate("MainWindow", "考 籍 号: "))
        self.lbStudentName.setText(_translate("MainWindow", "---"))
        self.lbStudentKaoJiHao.setText(_translate("MainWindow", "---"))
        self.label_7.setText(_translate("MainWindow", "科目"))
        self.label_8.setText(_translate("MainWindow", "成绩"))
        self.label_9.setText(_translate("MainWindow", "状态"))
        self.label_10.setText(_translate("MainWindow", "必考"))
        self.lbProject1.setText(_translate("MainWindow", "--"))
        self.lbScore1.setText(_translate("MainWindow", "--"))
        self.lbStatus1.setText(_translate("MainWindow", "--"))
        self.lbChoose1.setText(_translate("MainWindow", "--"))
        self.lbProject2.setText(_translate("MainWindow", "--"))
        self.lbScore2.setText(_translate("MainWindow", "--"))
        self.lbStatus2.setText(_translate("MainWindow", "--"))
        self.lbChoose2.setText(_translate("MainWindow", "--"))
        self.lbProject3.setText(_translate("MainWindow", "--"))
        self.lbScore3.setText(_translate("MainWindow", "--"))
        self.lbStatus3.setText(_translate("MainWindow", "--"))
        self.lbChoose3.setText(_translate("MainWindow", "--"))
        self.pbPrintScore.setText(_translate("MainWindow", "打印"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    title = "中考体育成绩打印程序"

    MainWindow.setWindowTitle(title)
    MainWindow.show()
    sys.exit(app.exec_())